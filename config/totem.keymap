//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&sk { quick-release; };

/ {
    combos {
        compatible = "zmk,combos";

        right_ctrl {
            bindings = <&sk RCTRL>;
            key-positions = <16 17>;
            require-prior-idle-ms = <50>;
        };

        right_gui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <17 18>;
            require-prior-idle-ms = <50>;
        };

        right_alt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <18 19>;
            require-prior-idle-ms = <50>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 18>;
            require-prior-idle-ms = <50>;
        };

        left_control {
            bindings = <&sk LCTRL>;
            key-positions = <13 12>;
            require-prior-idle-ms = <50>;
        };

        left_gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <11 12>;
            require-prior-idle-ms = <50>;
        };

        left_alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <10 11>;
            require-prior-idle-ms = <50>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <11 13>;
            require-prior-idle-ms = <50>;
        };

        sweChar1 {
            bindings = <&kp SQT>;
            key-positions = <22 23>;
        };

        sweChar2 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <24 23>;
        };

        rightBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <27 28>;
            require-prior-idle-ms = <50>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <28 29>;
            require-prior-idle-ms = <50>;
        };

        left_bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <22 24>;
            require-prior-idle-ms = <50>;
        };

        right_parantheses {
            bindings = <&kp LS(RIGHT_PARENTHESIS)>;
            key-positions = <29 27>;
            require-prior-idle-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <24 12>;
            require-prior-idle-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <27 17>;
            require-prior-idle-ms = <50>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <22 12>;
            require-prior-idle-ms = <50>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <17 29>;
            require-prior-idle-ms = <50>;
        };

        graveTilde {
            bindings = <&kp GRAVE>;
            key-positions = <29 30>;
            require-prior-idle-ms = <50>;
        };

        enter {
            bindings = <&kp RET>;
            key-positions = <35 16>;
            timeout-ms = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <6 7>;
            require-prior-idle-ms = <100>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    behaviors {
        shiftCapsWord: shiftCapsWord {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTCAPSWORD";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;
        };

        navEnter: navEnter {
            compatible = "zmk,behavior-hold-tap";
            label = "NAVENTER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            retro-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
             &kp Q  &kp W  &kp E  &kp R           &kp T        &kp Y        &kp U       &kp I        &kp O    &kp P
             &kp A  &kp S  &kp D  &kp F           &kp G        &kp H        &kp J       &kp K        &kp L    &kp SEMI
&key_repeat  &kp Z  &kp X  &kp C  &kp V           &kp B        &kp N        &kp M       &kp COMMA    &kp DOT  &kp FSLH  &sl 1
                           &mo 3  &sk LEFT_SHIFT  &kp SPACE    &lt 1 ENTER  &kp ESCAPE  &key_repeat
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        nav_layer {
            label = "lower";
            bindings = <
       &none            &none         &none                     &none         &none           &none         &none          &none         &none                 &none
       &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3              &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
&none  &kp EXCLAMATION  &kp AT        &kp HASH                  &kp DOLLAR    &kp PERCENT     &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
                                      &kp LA(LG(LEFT_CONTROL))  &none         &kp SPACE       &kp RET       &none          &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        sim_layer {
            label = "SYM";
            bindings = <
       &none           &kp MINUS             &kp UNDERSCORE         &kp PLUS         &kp EQUAL    &none  &none  &none  &none  &none
       &kp LEFT_BRACE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RIGHT_BRACE  &kp TILDE    &none  &none  &none  &none  &none
&none  &kp SLASH       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH    &kp GRAVE    &none  &none  &none  &none  &none  &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        adjust_layer {
            label = "ADJ";
            bindings = <
            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp C_VOL_UP
            &kp F11       &kp F12       &caps_word    &kp PRINTSCREEN  &none           &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp C_VOLUME_DOWN
&bt BT_CLR  &kp F1        &kp F2        &kp F3        &kp F4           &kp F5          &kp F6    &kp F7         &kp F8       &kp F9     &kp F10            &none
                                        &none         &none            &kp SPACE       &kp RET   &kp ESCAPE     &kp TAB
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };
};
